/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEFAULT_L 0
#define SYMBOLS_L 1
#define ARROWS_L  2
#define NUMBERS_L 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        a {
            bindings = <&kp ESCAPE>;
            key-positions = <2 1>;
        };

        b {
            bindings = <&kp TAB>;
            key-positions = <14 13>;
        };

        c {
            bindings = <&kp K_COPY>;
            key-positions = <26 25>;
        };

        d {
            bindings = <&kp BACKSPACE>;
            key-positions = <7 8>;
        };

        e {
            bindings = <&kp DELETE>;
            key-positions = <9 10>;
        };

        f {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <19 20>;
        };

        g {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <21 20>;
        };

        h {
            bindings = <&sys_reset>;
            key-positions = <1 29>;
        };

        j {
            bindings = <&sys_reset>;
            key-positions = <30 10>;
        };

        paste {
            bindings = <&kp K_PASTE>;
            key-positions = <27 28>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <31 32>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "0";
            bindings = <
&none  &kp Q        &kp W             &kp E           &kp R  &kp T        &kp Y      &kp U  &kp I            &kp O              &kp P           &none
&none  &mt LCTRL A  &mt LEFT_SHIFT S  &mt LEFT_ALT D  &kp F  &kp G        &kp H      &kp J  &mt RIGHT_ALT K  &mt RIGHT_SHIFT L  &mt RCTRL SEMI  &none
&none  &kp Z        &kp X             &kp C           &kp V  &kp B        &kp N      &kp M  &kp COMMA        &kp DOT            &kp FSLH        &none
                                      &mo 3           &mo 1  &kp SPACE    &kp ENTER  &mo 2  &kp LEFT_GUI
            >;
        };

        number_layer {
            label = "1";
            bindings = <
&trans  &kp N1     &kp N2    &kp N3     &kp N4     &kp N5           &kp N6  &kp N7  &kp N8  &kp N9  &kp N0         &trans
&trans  &kp GRAVE  &kp PLUS  &kp MINUS  &kp EQUAL  &kp LS(UNDER)    &trans  &trans  &trans  &trans  &kp BACKSLASH  &trans
&trans  &trans     &trans    &trans     &trans     &trans           &trans  &trans  &trans  &trans  &trans         &trans
                             &trans     &trans     &trans           &trans  &trans  &trans
            >;
        };

        bt_layer {
            label = "2";
            bindings = <
&trans  &kp TAB  &kp LS(N2)      &kp LS(N3)  &kp LS(N4)  &kp LS(N5)     &kp LS(N6)  &kp LS(N7)  &kp LS(N8)  &kp LS(N9)  &kp BSPC  &trans
&trans  &trans   &kp LEFT_ARROW  &kp DEL     &kp RIGHT   &bt BT_CLR     &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &kp SQT   &trans
&trans  &trans   &trans          &trans      &trans      &bootloader    &kp PG_UP   &kp PG_DN   &trans      &trans      &kp ESC   &trans
                                 &trans      &trans      &trans         &trans      &trans      &trans
            >;
        };

        arrow_layer {
            label = "3";
            bindings = <
&none  &none           &kp UP_ARROW    &none      &sys_reset  &none    &none  &none  &none  &none  &none  &none
&none  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none       &none    &none  &none  &none  &none  &none  &none
&none  &none           &none           &none      &none       &none    &none  &none  &none  &none  &none  &none
                                       &none      &none       &none    &none  &none  &none
            >;
        };
    };
};
